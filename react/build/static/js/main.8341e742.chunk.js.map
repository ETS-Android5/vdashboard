{"version":3,"sources":["serviceWorker.js","common/behaviour.js","components/Ni/index.js","components/UserInfo.js","components/Center.js","components/Select.js","components/Table.js","components/Sidebar.js","actions/LoginAction.js","types/Login.js","components/Users.js","actions/UserAction.js","types/User.js","common/constants.js","components/Dashboard.js","Models/Model.js","Models/ActiveRecord.js","Models/Show.js","Models/Episode.js","Models/Login.js","store/models.js","components/Login.js","components/Signup.js","components/Profile.js","components/Settings.js","components/Reports.js","actions/VideoAction.js","types/Video.js","components/File.js","components/Alert.js","components/VideoPlayer.js","Models/Video.js","components/Videos.js","components/VideosView.js","components/Shows.js","components/ShowsView.js","App.js","registerServiceWorker.js","sagas/rootSaga.js","index.js","reducers/UserReducer.js"],"names":["Boolean","window","location","hostname","match","ENVIRONMENT","Ni","react_default","a","createElement","React","Component","UserInfo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","password","login","logins","console","log","setState","form","style","width","float","display","padding","backgroundColor","borderRadius","textAlign","cursor","color","className","withRouter","connect","Center","title","onClick","handleCenterClick","components_UserInfo","children","Select","isVisible","selected","value","label","handleOnClick","bind","assertThisInitialized","showHide","e","stopPropagation","_this$props","onSelect","model","_this$props2","nextProps","nextContext","_this2","data","id","map","item","i","key","defaultProps","Div","_ref","itemRow","el","includes","src","alt","Math","random","flex","flexSize","href","Li","_ref2","fields","itemDeleteAction","itemEditAction","itemViewAction","itemArray","__class","Row","keys","Table_Div","Table","items","length","Array","isArray","Table_Li","description","genre","image_path","dim","controls","image","col","Sidebar","setActive","active","preventDefault","logoutAction","history","push","authenticated","pathname","htmlFor","Link","to","handleLogout","mapActionsToProps","user","type","payload","Users","adminList","email","admin","showAdminList","makeAdmin","handleChange","defineProperty","target","_nextProps$users","users","edit","add","status","result","affectedRows","_this$state","userAddAction","userUpdateAction","userDeleteAction","userEditAction","components_Sidebar","components_Center","action","placeholder","onChange","components_Select","find","handleFormSubmit","components_Table","list","apiServer","data2","role","Dashboard","height","index_esm","chartType","mapsApiKey","rootProps","data-testid","loader","options","legend","pieSliceText","slices","4","offset","12","14","15","colorAxis","colors","position","spot","Model","name","forceUpdate","server","debug","msg","create","create_success","create_fail","read","read_success","read_fail","edit_success","edit_fail","update","update_success","update_fail","delete","delete_success","delete_fail","types","initState","actions","ok","arguments","undefined","_action$payload$data","objectSpread","JSON","stringify","mode","_action$payload$data2","_id","timestamp","Date","now","$this","regenerator_default","mark","wrap","_context","prev","next","api","formData","d","sent","put","t0","stop","_context2","_context3","deleted","_context4","_this3","axios","get","then","res","catch","error","Error","config","onUploadProgress","progressEvent","percentCompleted","round","loaded","total","post","getAll","ActiveRecord","_uploadProgress","_form","_subscribers","forceUpdateOnSubscribers","method","concat","toConsumableArray","forEach","createAction","updateAction","FormData","append","hasId","setUploadProgress","resetForm","Show","getFiles","episodes","setImagePath","setVideoPath","files","video_path","Episode","_genreList","onSelect2","video","genreList","actionsSuper","esm_get","prototype","models","shows","Login","newApiRead","auth","headers","newApi","field","readAction","flexDirection","alignItems","justifyContent","handleLogin","Signup","url","alert","message","handleSignUp","Profile","Settings","Reports","videoReadAction","videoAddAction","videoDeleteAction","videoUpdateAction","videoEditAction","File","refImage","createRef","refDisplayImage","readUploadingImage","current","accept","input","reader","FileReader","onload","readAsDataURL","uuidv4","margin","ref","multiple","autoPlay","Number","uploadProgress","Alert","visible","setTimeoutId","success","cls","icon","warning","info","danger","onClose","clearTimeout","setTimeout","VideoPlayer","marginTop","views","Video","_mode","_formResult","_display_fields","_subscribed","_videoUrl","_imageUrl","setGenre","callSubscribed","m","r","video_url","videoUrl","image_url","imageUrl","Videos","_forceUpdate","subscribe","formFieldByE","params","submitForm","videos","formResult","cols","rows","arr","VideosView","filtered","filter","show","episode","filterById","showArray","s","components_Alert","components_File","components_VideoPlayer","Shows","editAction","deleteAction","ShowsView","show_id","handleFormClear","episodeId","showId","viewAction","floor","showPlayer","filterByShow","btnLabel","episodeArray","readShowsAction","App","BrowserRouter","basename","Switch","Route","exact","path","component","rootSaga","takeLatest","sagas","rootSaga_marked","reds","reducers","allReducers","combineReducers","assign","sagaMiddleware","createSagaMiddleware","allStoreEnhancers","navigator","userAgent","devToolsExtension","compose","applyMiddleware","store","createStore","run","getState","dispatch","ReactDOM","render","es","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8341e742.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const ENV = 'uat'; // api data\nexport const CLEAR_ORDER_AFTER_CREATION = true; // if true the order will be deleted from redux but will exist at Backend\nexport const ENVIRONMENT = {\n    DEV : true,\n    PROD: false,\n};\nexport const ODDS_UPDATE_INTERVAL = 9000; // milliseconds\nexport const STATS_UPDATE_INTERVAL = 5000; // milliseconds\n","import React from 'react';\n\n\nclass Ni extends React.Component {\n\n    render() {\n        return(\n            <div>Not Implemented component</div>\n        )\n    }\n}\n\nexport default Ni;\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Link} from 'react-router-dom';\nimport {withRouter} from \"react-router-dom\";\nimport axios from 'axios';\n\n\nclass UserInfo extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: 'root',\n            password: '',\n            login: true\n        }\n    }\n\n    componentDidMount() {\n        const { logins } = this.props;\n        console.log('componentDidMount', logins);\n        this.setState({username: logins.form.username});\n    }\n\n    render() {\n\n        return (\n            <div style={{width: '300px', float: 'right'}}>\n                    <span style={{\n                        display: 'inline-block',\n                        padding: '8px',\n                        backgroundColor: 'black',\n                        borderRadius: '3px',\n                        width: '120px',\n                        textAlign: 'center',\n                        cursor: 'pointer',\n                        color: 'white'\n                    }}>\n                        <i className=\"fas fa-user\"></i>  {this.state.username}\n                    </span>\n            </div>\n        )\n    }\n}\n\n/**\n * Get data from store\n * @param state\n */\nconst mapStateToProps = state => ({\n    logins: state.logins,\n});\n\n/**\n * Import action from dir action above - but must be passed to connect method in order to trigger reducer in store\n * @type {{UserUpdate: UserUpdateAction}}\n */\nconst mapActionsToProps = {};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(UserInfo));\n","import React from 'react';\nimport UserInfo from \"./UserInfo\";\n\nclass Center extends React.Component {\n\n    render() {\n        const {title} = this.props;\n\n        return (\n            <div className=\"dashboard--center\" onClick={this.handleCenterClick}>\n                <div style={{textAlign: 'right'}}><UserInfo /></div>\n                <h1 className=\"h1\">{title}</h1>\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default Center;\n","import React from 'react';\n\nclass Select extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isVisible: false,\n            selected: {\n                value: '',\n                label: ''\n            }\n        };\n\n        this.handleOnClick = this.handleOnClick.bind(this);\n        this.showHide = this.showHide.bind(this);\n    }\n\n    showHide(e) {\n        e.stopPropagation();\n        this.setState({isVisible: !this.state.isVisible});\n    }\n\n    handleOnClick(selected) {\n        const isVisible = false;\n        this.setState({selected, isVisible});\n        let {onSelect, model} = this.props;\n        if(model) {\n            onSelect = model.onSelect;\n        }\n        onSelect(selected);\n    }\n\n    componentDidMount() {\n        let {selected, model} = this.props;\n        console.log('componentDidMount', selected);\n        if(model) {\n            selected = model.selected;\n        }\n        if (selected) {\n            this.setState({selected});\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        let {selected, model} = nextProps;\n        if(model) {\n            selected = model.selected;\n        }\n\n        if (selected) {\n            this.setState({selected});\n        }\n    }\n\n    render() {\n        const {data} = this.props;\n\n        return (\n            <div className=\"dd-wrapper\">\n                <div className=\"dd-header dd-header-open\" id=\"select-city\"\n                     onClick={(e) => this.showHide(e)}>\n                    <div className=\"dd-header-title\"\n                         id=\"dd-header-title\"> {this.state.selected.label} </div>\n                    <div className=\"dd-icon\"><i className=\"fas fa-angle-down\"></i></div>\n                </div>\n                <ul className=\"dd-list\" id=\"dd-list\"\n                    style={{display: this.state.isVisible ? 'block' : 'none'}}>\n                    {\n                        data.map((item, i) => <li\n                            key={i}\n                            onClick={() => this.handleOnClick(item)} id={item.value}\n                            className=\"dd-list-item\">{item.label}</li>)\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nSelect.defaultProps = {\n    data: [\n        {\n            value: 'pop',\n            label: 'Pop'\n        },\n        {\n            value: 'jazz',\n            label: 'Jazz'\n        },\n        {\n            value: 'rock',\n            label: 'Rock'\n        },\n        {\n            value: 'disco',\n            label: 'Disco'\n        },\n    ],\n    onSelect: (item) => console.log('You selected item ', item)\n};\nexport default Select;\n","import React from 'react';\n\nconst Div = ({itemRow}) => {\n    let el = '';\n\n    if ((itemRow.value + '').includes('http')) {\n        el = <img style={{width: '160px'}} src={itemRow.value} alt=\"Image\"/>\n    } else {\n        el = itemRow.value;\n    }\n\n    return <div key={el + Math.random()} style={{flex: itemRow.flexSize}} href=\"#\">{el}</div>\n};\n\nconst Li = ({fields, item, itemDeleteAction, itemEditAction, itemViewAction}) => {\n    const handleDelete = (e) => {\n        e.preventDefault();\n        itemDeleteAction(item.id);\n    };\n    let itemArray = item; // Array\n    let itemRow = item; // Row\n\n    if (item.__class && item.__class === 'Video') {\n        itemArray = item.form;\n    }\n\n    itemRow = new Row(itemArray);\n\n\n    return (\n        <li className=\"list-group-item\">\n            <div className=\"list-group-item-data\">\n                {\n                    Object.keys(itemRow).map(key => fields && fields.includes(key) ?\n                        <Div itemRow={itemRow[key]} key={key}/> : null)\n                }\n            </div>\n\n            <div className=\"list-group-item-buttons\">\n                {\n                    itemEditAction && itemEditAction !== null ?\n                        <div style={{flex: 1}}>\n                            <button onClick={() => itemEditAction(itemArray)} className=\"button-small\">Edit</button>\n                        </div>\n                        : null\n                }\n\n                {\n                    itemDeleteAction && itemDeleteAction !== null ?\n                        <div style={{flex: 1}}>\n                            <button onClick={() => itemDeleteAction(itemArray['_id'])} className=\"button-small\">Delete</button>\n                        </div>\n                        : null\n                }\n                {\n                    itemViewAction && itemViewAction !== null ?\n                        <div style={{flex: 1}}>\n                            <button onClick={() => itemViewAction(itemArray)} className=\"button-small\">View</button>\n                        </div>\n                        : null\n                }\n            </div>\n\n\n        </li>\n    );\n};\n\nclass Table extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.itemEditAction = this.itemEditAction.bind(this);\n    }\n\n    itemEditAction(item) {\n        console.log('Item edit: ', item);\n        this.props.itemEditAction(item);\n    }\n\n    render() {\n        const {items, itemDeleteAction, itemEditAction, itemViewAction, fields} = this.props;\n        if (!items || items.length === 0) return <div>Loading...</div>;\n\n        return (\n            <ul className=\"list-group u-margin-top-big\">\n                {\n                    items.map((item, i) => Array.isArray(item) ? null :\n                        <Li fields={fields} itemDeleteAction={itemDeleteAction}\n                            itemEditAction={itemEditAction} itemViewAction={itemViewAction} key={i} item={item}></Li>)\n                }\n            </ul>\n        )\n    }\n}\n\nTable.defaultProps = {\n    fields: ['id', 'title', 'genre'],\n    items: [\n        {\n            id: 2,\n            title: \"Laboris soluta nostr\",\n            description: \"Ad maxime possimus \",\n            genre: \"jazz\",\n            image_path: \"images/85588900-f44a-11e9-ab34-c7f808721400_23.png\",\n        },\n        {\n            id: 1,\n            title: \"Molestiae aliquam it\",\n            description: \"Ea ea architecto eni\",\n            genre: \"jazz\",\n            image_path: \"images/607ad250-f44a-11e9-ab34-c7f808721400_24.png\",\n        }\n    ]\n};\nexport default Table;\n\nfunction Row(data) {\n    this.__class = 'Row';\n\n    const dim = {\n        id: 1,\n        title: 3,\n        description: 5,\n        genre: 2,\n        controls: 5,\n        image: 3\n    };\n\n    for (let col in data) {\n        this[col] = {\n            value: data[col],\n            flexSize: dim[col] ? dim[col] : 1\n        };\n    }\n    return this;\n}\n","import React from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {logoutAction} from \"../actions/LoginAction\";\n\n\nclass Sidebar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.setActive = this.setActive.bind(this);\n        this.state = {\n            active: 'dashboard'\n        }\n    }\n\n    setActive(e) {\n        e.preventDefault();\n        console.log('Setting active ' + e);\n        this.setState({active: e});\n    }\n\n    handleLogout() {\n        const {logoutAction} = this.props;\n        logoutAction();\n        this.props.history.push('/');\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        const {logins} = nextProps;\n        if (logins.form.authenticated === false) {\n            // this.props.history.push('/');\n        }\n    }\n\n    render() {\n        let {pathname} = this.props.location;\n        pathname = pathname.length == 0 ? '/dashboard' : pathname;\n\n        return (\n            <div className=\"dashboard--left-bar\">\n                <span className=\"button line u-green-text\">\n                    <i className=\"fas fa-shopping-basket\"></i>\n                    <label htmlFor=\"\"><h4 className=\"italic\">Admin</h4></label>\n                </span>\n                <span className=\"dashboard--left-bar-line\"></span>\n\n                <Link to={`/dashboard`} className={pathname == '/dashboard' ? 'button active' : 'button'}>\n                    <i className=\"fas fa-home\"></i>\n                    <label htmlFor=\"\">Dashboard</label>\n                </Link>\n\n                <Link to={`/users`} className={pathname == '/users' ? 'button active' : 'button'}>\n                    <i className=\"fas fa-users\"></i>\n                    <label htmlFor=\"\">Users</label>\n                </Link>\n\n                <Link to={`/profile`} className={pathname == '/profile' ? 'button active' : 'button'}>\n                    <i className=\"fas fa-user\"></i>\n                    <label htmlFor=\"\">Profile</label>\n                </Link>\n\n                <Link to={`/shows`} className={pathname == '/shows' ? 'button active' : 'button'}>\n                    <i className=\"fas fa-photo-video\"></i>\n                    <label htmlFor=\"\">Shows</label>\n                </Link>\n\n                <Link to={`/settings`} className={pathname == '/settings' ? 'button active' : 'button'}>\n                    <i className=\"fas fa-cog\"></i>\n                    <label>Settings</label>\n                </Link>\n\n                <Link to={`/reports`} className={pathname == '/reports' ? 'button active' : 'button'}>\n                    <i className=\"fas fa-chart-bar\"></i>\n                    <label>Reports</label>\n                </Link>\n\n                <span className=\"button\" onClick={() => this.handleLogout()}>\n                    <i className=\"fas fa-sign-out-alt\"></i>\n                    <label>Sign out</label>\n                </span>\n            </div>\n        )\n    }\n}\n\n/**\n * Get data from store\n * @param state\n */\nconst mapStateToProps = state => ({\n    login: state.login\n});\n\n/**\n * Import action from dir action above - but must be passed to connect method in order to trigger reducer in store\n * @type {{UserUpdate: UserUpdateAction}}\n */\nconst mapActionsToProps = {\n    logoutAction\n};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Sidebar));\n\n","import {\n    LOGIN, LOGIN_SUCCESS, LOGIN_FAIL,\n    LOGOUT\n} from '../types/Login';\n\nexport const loginAction = (user) => {\n    console.log('Inside loginAction', user);\n\n    return {\n        type: LOGIN,\n        payload: {\n            user\n        }\n    }\n};\n\nexport const loginSuccessAction = (resp) => {\n    console.log('Inside loginSuccessAction');\n    return {\n        type: LOGIN_SUCCESS,\n        payload: {\n            user : resp\n        }\n    }\n};\n\nexport const loginFailAction = (err) => {\n    console.log('Inside loginFailAction');\n    console.log(err);\n    return {\n        type: LOGIN_FAIL,\n        payload: {err}\n    }\n};\n\n\nexport const logoutAction = (user) => {\n    console.log('Inside logoutAction', user);\n\n    return {\n        type: LOGOUT,\n        payload: {\n            user\n        }\n    }\n};\n","export const LOGIN = 'Login';\nexport const LOGIN_SUCCESS = 'Login.Success';\nexport const LOGIN_FAIL = 'Login.Fail';\n\nexport const LOGOUT = 'Logout';\n\n","import React from 'react';\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {userAddAction, userUpdateAction} from \"../actions/UserAction\";\nimport Center from \"./Center\";\nimport Select from './Select';\nimport Table from './Table';\nimport Sidebar from \"./Sidebar\";\nimport {userDeleteAction, userEditAction} from '../actions/UserAction';\n\n\nclass Users extends React.Component {\n    constructor(props) {\n        super(props);\n        this.adminList = [\n            {\n                value: '1',\n                label: 'Yes'\n            },\n            {\n                value: '0',\n                label: 'No'\n            },\n        ];\n\n        this.state = {\n            id: null,\n            email: '',\n            username: '',\n            password: '',\n            admin: 0,\n            showAdminList: false,\n        };\n\n\n        this.showAdminList = this.showAdminList.bind(this);\n        this.handleCenterClick = this.handleCenterClick.bind(this);\n        this.makeAdmin = this.makeAdmin.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    showAdminList(e) {\n        e.stopPropagation();\n        this.setState({showAdminList: !this.state.showAdminList});\n    }\n\n    handleCenterClick() {\n        this.setState({showAdminList: false});\n    }\n\n    makeAdmin(user) {\n        this.setState({admin: user.value});\n    }\n\n    handleChange(e) {\n        this.setState({[e.target.id]: e.target.value});\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        console.log('componentWillReceiveProps', nextProps);\n        const {edit, add} = nextProps.users;\n\n        if (nextProps.users && edit) {\n            const {id, email, username, admin} = edit;\n            this.setState({id: id ? id : null, email, username, password: '', admin});\n        }\n\n        if ( (add && add.status === 1) || (edit && edit.result && edit.result.affectedRows == 1) ) {\n            this.setState({id: null, email: '', username: '', password: '', admin: 0});\n        }\n    }\n\n    handleFormSubmit(e) {\n        e.preventDefault();\n        const {id, email, username, password, admin} = this.state;\n        const {userAddAction, userUpdateAction} = this.props;\n\n        const user = {\n            id: id,\n            email: email,\n            username: username,\n            password: password,\n            admin: admin\n        };\n\n        console.log('Form data: ', id, username, password, admin);\n\n        if (id === null) {\n            userAddAction(user);\n        } else {\n            userUpdateAction(user);\n            this.setState({id: null, email: '', username: '', password: '', admin: 0});\n        }\n    }\n\n    render() {\n        const {users, userDeleteAction, userEditAction} = this.props;\n        if (!users) return <div>Loading</div>\n        console.log('Users Render', users);\n\n        return (\n            <section id=\"dashboard\" className=\"dashboard\">\n                <Sidebar/>\n                <Center title=\"Users\">\n                    <form action=\"\">\n\n                        <div className=\"row\">\n                            <div className=\"col-1-of-2\">\n                                <input type=\"text\" id=\"email\" placeholder=\"Type email\" value={this.state.email}\n                                       onChange={e => this.handleChange(e)}/>\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col-1-of-2\">\n                                <input type=\"text\" id=\"username\" placeholder=\"Type username\" value={this.state.username}\n                                       onChange={e => this.handleChange(e)}/>\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col-1-of-3\">\n                                <input type=\"password\" id=\"password\" placeholder=\"Type password\" value={this.state.password}\n                                       onChange={e => this.handleChange(e)}/>\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col-1-of-2\">\n                                <Select selected={this.adminList.find(i => i.value == this.state.admin)}\n                                        data={this.adminList} onSelect={this.makeAdmin}/>\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col-1-of-3\">\n                                <div className=\"dashboard--container\">\n\n                                    <button style={{width: '80px'}} type=\"submit\"\n                                            onClick={e => this.handleFormSubmit(e)}><i\n                                        className=\"fas fa-save\"></i> Save\n                                    </button>\n\n                                </div>\n                            </div>\n                        </div>\n\n                    </form>\n\n                    <Table fields={['id', 'username', 'admin']} items={users.list}\n                           itemDeleteAction={userDeleteAction} itemEditAction={userEditAction}/>\n                </Center>\n            </section>\n        )\n    }\n}\n\n\n/**\n * Get data from store\n * @param state\n */\nconst mapStateToProps = state => ({\n    users: state.users\n});\n\n/**\n * Import action from dir action above - but must be passed to connect method in order to trigger reducer in store\n * @type {{UserUpdate: UserUpdateAction}}\n */\nconst mapActionsToProps = {\n    userAddAction,\n    userUpdateAction,\n    userDeleteAction,\n    userEditAction\n};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Users));\n","import {\n    USER_ADD,\n    USER_ADD_SUCCESS,\n    USER_ADD_FAIL, USER_READ, USER_READ_SUCCESS, USER_READ_FAIL, USER_DELETE, USER_DELETE_SUCCESS, USER_DELETE_FAIL,\n    USER_EDIT, USER_EDIT_SUCCESS, USER_EDIT_FAIL, USER_UPDATE, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL\n} from '../types/User';\n\n\nexport const userAddAction = (user) => {\n    console.log('Inside userAddAction', user);\n\n    return {\n        type: USER_ADD,\n        payload: {\n            user\n        }\n    }\n};\n\nexport const userAddSuccessAction = (resp) => {\n    return {\n        type: USER_ADD_SUCCESS,\n        payload: resp\n    }\n};\n\nexport const userAddFailAction = (err) => {\n    console.log('Inside userAddFailAction');\n    console.log(err);\n    return {\n        type: USER_ADD_FAIL,\n        payload: {err}\n    }\n};\n\nexport const userDeleteAction = (user) => {\n    console.log('Inside userDeleteAction', user);\n\n    return {\n        type: USER_DELETE,\n        payload: {\n            id : user.id\n        }\n    }\n};\n\nexport const userDeleteSuccessAction = (data) => {\n    return {\n        type: USER_DELETE_SUCCESS,\n        payload: {\n            status: data.status,\n            id: data.id\n        }\n    }\n};\n\nexport const userDeleteFailAction = (err) => {\n    return {\n        type: USER_DELETE_FAIL,\n        payload: {\n            err\n        }\n    }\n};\n\nexport const userEditAction = (user) => {\n    return {\n        type: USER_EDIT,\n        payload: {\n            user\n        }\n    }\n};\nexport const userEditSuccessAction = (status) => {\n    return {\n        type: USER_EDIT_SUCCESS,\n        payload: {\n            status\n        }\n    }\n};\nexport const userEditFailAction = (err) => {\n    return {\n        type: USER_EDIT_FAIL,\n        payload: {\n            err\n        }\n    }\n};\n\n\nexport const userUpdateAction = (user) => {\n    console.log('Inside userUpdateAction', user);\n\n    return {\n        type: USER_UPDATE,\n        payload: {\n            user\n        }\n    }\n};\n\nexport const userUpdateSuccessAction = (status) => {\n    console.log('Inside userUpdateSuccessAction', status);\n\n    return {\n        type: USER_UPDATE_SUCCESS,\n        payload: {\n            status\n        }\n    }\n};\n\nexport const userUpdateFailAction = (err) => {\n    console.log('Inside userUpdateFailAction', err);\n\n    return {\n        type: USER_UPDATE_FAIL,\n        payload: {\n            err\n        }\n    }\n};\n\nexport const userReadAction = () => {\n    console.log('userReadAction');\n    return {\n        type: USER_READ,\n        payload: {}\n    }\n};\n\n\nexport const userReadSuccessAction = (users) => {\n    console.log('userReadAction');\n    return {\n        type: USER_READ_SUCCESS,\n        payload: {users}\n    }\n};\n\n\nexport const userReadFailAction = (err) => {\n    console.log('userReadFailAction');\n    return {\n        type: USER_READ_FAIL,\n        payload: {err}\n    }\n};\n","export const USER_READ = 'User.Read';\nexport const USER_READ_SUCCESS = 'User.Read.Success';\nexport const USER_READ_FAIL = 'User.Read.Fail';\n\nexport const USER_ADD = 'User.Add';\nexport const USER_ADD_SUCCESS = 'User.Add.Success';\nexport const USER_ADD_FAIL = 'User.Add.Fail';\n\nexport const USER_UPDATE = 'User.Update';\nexport const USER_UPDATE_SUCCESS = 'User.Update.Success';\nexport const USER_UPDATE_FAIL = 'User.Update.Fail';\n\nexport const USER_EDIT = 'User.Edit';\nexport const USER_EDIT_SUCCESS = 'User.Edit.Success';\nexport const USER_EDIT_FAIL = 'User.Edit.Fail';\n\nexport const USER_DELETE = 'User.Delete';\nexport const USER_DELETE_SUCCESS = 'User.Delete.Success';\nexport const USER_DELETE_FAIL = 'User.Delete.Fail';\n","const apiServer = 'http://localhost:8090';\n\nexport  {\n    apiServer,\n};\n\n\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\n\nimport {apiServer} from '../common/constants';\nimport Sidebar from './Sidebar';\nimport UserInfo from './UserInfo';\n// import { Chart } from 'react-charts';\nimport Chart from \"react-google-charts\";\n\nconst endPoint = '/v2/calculator/api/?zone=';\nconst server = apiServer + endPoint;\n\nconst data2 = [\n    [\"Element\", \"Density\", {role: \"style\"}],\n    [\"Copper\", 8.94, \"#b87333\"], // RGB value\n    [\"Silver\", 10.49, \"silver\"], // English color name\n    [\"Gold\", 19.3, \"gold\"],\n    [\"Platinum\", 21.45, \"color: #e5e4e2\"] // CSS-style declaration\n];\n\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <section id=\"dashboard\" className=\"dashboard\">\n                <Sidebar/>\n                <div className=\"dashboard--center\" onClick={this.handleCenterClick}>\n                    <div style={{textAlign: 'right'}}><UserInfo/></div>\n                    <h1>Dashboard</h1>\n                    <div style={{padding: '40px', backgroundColor: 'lavenderblush', borderRadius: '3px'}}>\n\n                        <div className=\"row\">\n                            <div className=\"col-1-of-4\">\n                                <div style={{\n                                    width: '100%',\n                                    height: '300px',\n                                    backgroundColor: 'red',\n                                    borderRadius: '3px'\n                                }}></div>\n                            </div>\n                            <div className=\"col-1-of-4\">\n                                <div style={{\n                                    width: '100%',\n                                    height: '300px',\n                                    backgroundColor: 'orange',\n                                    borderRadius: '3px'\n                                }}></div>\n                            </div>\n                            <div className=\"col-1-of-4\">\n                                <div style={{\n                                    width: '100%',\n                                    height: '300px',\n                                    backgroundColor: 'green',\n                                    borderRadius: '3px'\n                                }}></div>\n                            </div>\n                            <div className=\"col-1-of-4\">\n                                <div style={{\n                                    width: '100%',\n                                    height: '300px',\n                                    backgroundColor: 'blue',\n                                    borderRadius: '3px'\n                                }}></div>\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col-1-of-1\">\n                                <Chart\n                                    width={'100%'}\n                                    height={'700px'}\n                                    chartType=\"GeoChart\"\n                                    data={[\n                                        ['Country', 'Popularity'],\n                                        ['Germany', 200],\n                                        ['United States', 300],\n                                        ['Brazil', 400],\n                                        ['Canada', 500],\n                                        ['France', 600],\n                                        ['RU', 700],\n                                    ]}\n                                    // Note: you will need to get a mapsApiKey for your project.\n                                    // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\n                                    mapsApiKey=\"YOUR_KEY_HERE\"\n                                    rootProps={{'data-testid': '1'}}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-1-of-2\">\n                                <Chart\n                                    chartType=\"ColumnChart\"\n                                    width=\"100%\"\n                                    height=\"400px\"\n                                    data={data2}\n                                />\n\n                            </div>\n\n                            <div className=\"col-1-of-2\">\n                                <Chart\n                                    width=\"100%\"\n                                    height=\"400px\"\n                                    chartType=\"PieChart\"\n                                    loader={<div>Loading Chart</div>}\n                                    data={[\n                                        ['Task', 'Hours per Day'],\n                                        ['Work', 11],\n                                        ['Eat', 2],\n                                        ['Commute', 2],\n                                        ['Watch TV', 2],\n                                        ['Sleep', 7],\n                                    ]}\n                                    options={{\n                                        title: 'My Daily Activities',\n                                    }}\n                                    rootProps={{'data-testid': '1'}}\n                                />\n                            </div>\n                        </div>\n\n\n                        <div className=\"row\">\n                            <div className=\"col-1-of-2\">\n                                <Chart\n                                    width=\"100%\"\n                                    height=\"400px\"\n                                    chartType=\"PieChart\"\n                                    loader={<div>Loading Chart</div>}\n                                    data={[\n                                        ['Language', 'Speakers (in millions)'],\n                                        ['Assamese', 13],\n                                        ['Bengali', 83],\n                                        ['Bodo', 1.4],\n                                        ['Dogri', 2.3],\n                                        ['Gujarati', 46],\n                                        ['Hindi', 300],\n                                        ['Kannada', 38],\n                                        ['Kashmiri', 5.5],\n                                        ['Konkani', 5],\n                                        ['Maithili', 20],\n                                        ['Malayalam', 33],\n                                        ['Manipuri', 1.5],\n                                        ['Marathi', 72],\n                                        ['Nepali', 2.9],\n                                        ['Oriya', 33],\n                                        ['Punjabi', 29],\n                                        ['Sanskrit', 0.01],\n                                        ['Santhali', 6.5],\n                                        ['Sindhi', 2.5],\n                                        ['Tamil', 61],\n                                        ['Telugu', 74],\n                                        ['Urdu', 52],\n                                    ]}\n                                    options={{\n                                        title: 'Indian Language Use',\n                                        legend: 'none',\n                                        pieSliceText: 'label',\n                                        slices: {\n                                            4: {offset: 0.2},\n                                            12: {offset: 0.3},\n                                            14: {offset: 0.4},\n                                            15: {offset: 0.5},\n                                        },\n                                    }}\n                                    rootProps={{'data-testid': '5'}}\n                                />\n                            </div>\n\n                            <div className=\"col-1-of-2\">\n                                <Chart\n                                    width=\"100%\"\n                                    height=\"400px\"\n                                    chartType=\"BubbleChart\"\n                                    loader={<div>Loading Chart</div>}\n                                    data={[\n                                        ['ID', 'X', 'Y', 'Temperature'],\n                                        ['', 80, 167, 120],\n                                        ['', 79, 136, 130],\n                                        ['', 78, 184, 50],\n                                        ['', 72, 278, 230],\n                                        ['', 81, 200, 210],\n                                        ['', 72, 170, 100],\n                                        ['', 68, 477, 80],\n                                    ]}\n                                    options={{\n                                        colorAxis: {colors: ['yellow', 'red']},\n                                    }}\n                                    rootProps={{'data-testid': '2'}}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col-1-of-1\">\n                                <Chart\n                                    width=\"100%\"\n                                    height={'500px'}\n                                    chartType=\"Histogram\"\n                                    loader={<div>Loading Chart</div>}\n                                    data={[\n                                        ['Dinosaur', 'Length'],\n                                        ['Acrocanthosaurus (top-spined lizard)', 12.2],\n                                        ['Albertosaurus (Alberta lizard)', 9.1],\n                                        ['Allosaurus (other lizard)', 12.2],\n                                        ['Apatosaurus (deceptive lizard)', 22.9],\n                                        ['Archaeopteryx (ancient wing)', 0.9],\n                                        ['Argentinosaurus (Argentina lizard)', 36.6],\n                                        ['Baryonyx (heavy claws)', 9.1],\n                                        ['Brachiosaurus (arm lizard)', 30.5],\n                                        ['Ceratosaurus (horned lizard)', 6.1],\n                                        ['Coelophysis (hollow form)', 2.7],\n                                        ['Compsognathus (elegant jaw)', 0.9],\n                                        ['Deinonychus (terrible claw)', 2.7],\n                                        ['Diplodocus (double beam)', 27.1],\n                                        ['Dromicelomimus (emu mimic)', 3.4],\n                                        ['Gallimimus (fowl mimic)', 5.5],\n                                        ['Mamenchisaurus (Mamenchi lizard)', 21.0],\n                                        ['Megalosaurus (big lizard)', 7.9],\n                                        ['Microvenator (small hunter)', 1.2],\n                                        ['Ornithomimus (bird mimic)', 4.6],\n                                        ['Oviraptor (egg robber)', 1.5],\n                                        ['Plateosaurus (flat lizard)', 7.9],\n                                        ['Sauronithoides (narrow-clawed lizard)', 2.0],\n                                        ['Seismosaurus (tremor lizard)', 45.7],\n                                        ['Spinosaurus (spiny lizard)', 12.2],\n                                        ['Supersaurus (super lizard)', 30.5],\n                                        ['Tyrannosaurus (tyrant lizard)', 15.2],\n                                        ['Ultrasaurus (ultra lizard)', 30.5],\n                                        ['Velociraptor (swift robber)', 1.8],\n                                    ]}\n                                    options={{\n                                        title: 'Lengths of dinosaurs, in meters',\n                                        legend: {position: 'none'},\n                                    }}\n                                    rootProps={{'data-testid': '1'}}\n                                />\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n            </section>\n        )\n    }\n}\n\n/**\n * Get data from store\n * @param state\n */\nconst mapStateToProps = state => ({\n    spot: state.spot,\n});\n\n/**\n * Import action from dir action above - but must be passed to connect method in order to trigger reducer in store\n * @type {{UserUpdate: UserUpdateAction}}\n */\nconst mapActionsToProps = {};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Dashboard));\n","import {call, put} from 'redux-saga/effects';\nimport axios from \"axios\";\nimport {apiServer} from \"../common/constants\";\n\nclass Model {\n\n    // Constructor - Name, forceUpdate\n    constructor(name) {\n        this.name = name;\n        this.forceUpdate = () => null;\n        this.server = apiServer + '/api/v1/' + name;\n        this.debug = false;\n    }\n\n    forceUpdate = () => null;\n\n    log(msg) {\n        if (false && this.debug) console.log(msg);\n    }\n\n    // Subscribers\n\n\n    // CRUD constants\n    get types() {\n        return {\n            create: this.name + '.create',\n            create_success: this.name + '.create.success',\n            create_fail: this.name + '.create.fail',\n\n            read: this.name + '.read',\n            read_success: this.name + '.read.success',\n            read_fail: this.name + '.read.fail',\n\n            edit: this.name + '.edit',\n            edit_success: this.name + '.edit.success',\n            edit_fail: this.name + '.edit.fail',\n\n            update: this.name + '.update',\n            update_success: this.name + '.update.success',\n            update_fail: this.name + '.update.fail',\n\n            delete: this.name + '.delete',\n            delete_success: this.name + '.delete.success',\n            delete_fail: this.name + '.delete.fail',\n        }\n    }\n\n    // ACTIONS\n    get actions() {\n        return {\n            create: (data) => ({type: this.types.create, payload: {data}}),\n            create_success: (data) => ({type: this.types.create_success, payload: {data}}),\n            create_fail: (data) => ({type: this.types.create_fail, payload: {data}}),\n\n            read: (data) => ({type: this.types.read, payload: {data}}),\n            read_success: (data) => ({type: this.types.read_success, payload: {data}}),\n            read_fail: (data) => ({type: this.types.read_fail, payload: {data}}),\n\n            update: (data) => ({type: this.types.update, payload: {data}}),\n            update_success: (data) => ({type: this.types.update_success, payload: {data}}),\n            update_fail: (data) => ({type: this.types.update_fail, payload: {data}}),\n\n            edit: (data) => ({type: this.types.edit, payload: {data}}),\n            edit_success: (data) => ({type: this.types.edit_success, payload: {data}}),\n            edit_fail: (data) => ({type: this.types.edit_fail, payload: {data}}),\n\n            delete: (data) => ({type: this.types.delete, payload: {data}}),\n            delete_success: (data) => ({type: this.types.delete_success, payload: {data}}),\n            delete_fail: (data) => ({type: this.types.delete_fail, payload: {data}}),\n        };\n    }\n\n    // REDUCERS\n    get reducers() {\n        const initState = {\n            list: [],\n            form: {},\n            actions: {\n                type: null, ok: false\n            }\n        };\n\n        const reducer = (state = initState, action = {}) => {\n\n            switch (action.type) {\n                case this.types.read_success:\n                    var {list, form, actions} = action.payload.data;\n                    return {...state, ...{list, form, actions}};\n\n                case this.types.edit:\n                    this.log('Inside reducer of class ' + this.name + ' : ' + JSON.stringify(action.payload));\n                    var {data} = action.payload;\n                    data.mode = this.types.edit;\n                    var newState = {...state, ...{form: data}};\n                    return newState;\n\n                case this.types.create_success :\n                    var {form, actions} = action.payload.data;\n                    // If status ok and form has got id then add item to list and clear form\n                    state.list && state.list.push(form) || (state.list = []);\n                    if (actions.ok === 1 && form._id) form = {};\n                    actions.timestamp = Date.now();\n\n                    return {\n                        ...state, ...{\n                            actions,\n                            form\n                        }\n                    };\n\n                case this.types.update_success || this.types.delete_success:\n                    var {form} = action.payload.data;\n                    if (action.ok === 1) form = {};\n                    return {\n                        ...state, ...{\n                            action: action.payload.data.action,\n                            form\n                        }\n                    };\n\n                default:\n                    this.log('Inside show default reducer of class ' + this.name + JSON.stringify(action));\n                    return state;\n            }\n        };\n\n        return reducer;\n    }\n\n\n    // SAGAS\n    get sagas() {\n        const $this = this;// new Model('show');\n\n        const create = function* (action) {\n            console.log('Action in saga', action.payload);\n            try {\n                const data = yield call($this.api.create, {\n                    formData: action.payload.data.formData,\n                    action: (d) => action.payload.data.action ? action.payload.data.action(d) : null\n                });\n                console.log('CREATE ', data);\n                if (true || data && Array.isArray(Object.keys(data))) {\n                    console.log('CREATE if', data);\n                    yield put($this.actions.create_success(data));\n                    // yield put($this.actions.read());\n                } else {\n                    console.log('CREATE fail', data);\n                    yield put($this.actions.create_fail(data));\n                }\n            } catch (err) {\n                console.log(err);\n                console.log('CREATE err', err);\n\n                yield put($this.actions.create_fail(err));\n            }\n        };\n\n        const read = function* (action) {\n            try {\n                const data = yield call($this.api.read, action.payload);\n                if (true || Array.isArray(data)) {\n                    yield put($this.actions.read_success(data));\n                } else {\n                    yield put($this.actions.read_fail(data));\n                }\n            } catch (err) {\n                yield put($this.actions.read_fail(err));\n            }\n        };\n\n        const update = function* (action) {\n            try {\n                const data = yield call($this.api.update, {\n                    formData: action.payload.data.formData,\n                    action: (d) => action.payload.data.action ? action.payload.data.action(d) : null\n                });\n                if (data && Array.isArray(Object.keys(data))) {\n                    yield put($this.actions.update_success(data));\n                    yield put($this.actions.read());\n                } else {\n                    yield put($this.actions.update_fail(data));\n                }\n            } catch (err) {\n                console.log(err);\n                yield put($this.actions.update_fail(err));\n            }\n        };\n\n        const deleted = function* (action) {\n            try {\n                // IF reset\n                if (action.payload.data === 'reset') {\n                    yield put($this.actions.delete_success(action.payload.data));\n                } else {\n                    const data = yield call($this.api.delete, action.payload);\n                    if (Array.isArray(Object.keys(data))) {\n                        yield put($this.actions.delete_success(data));\n                        yield put($this.actions.read());\n                    } else {\n                        yield put($this.actions.delete_fail(data));\n                    }\n                }\n            } catch (err) {\n                yield put($this.actions.delete_fail(err));\n            }\n        };\n\n        return {\n            create,\n            read,\n            update,\n            deleted,\n        }\n    }\n\n    // API\n    get api() {\n        return {\n            read: () =>\n                axios.get(this.server).then(res => res.data).catch(error => {\n                    throw new Error(error);\n                    console.dir(error);\n                }),\n            create: (data) => {\n                const config = {\n                    onUploadProgress: function (progressEvent) {\n                        const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n                        data.action && data.action(percentCompleted);\n                    }\n                };\n                console.log('API', data);\n                return axios.post(this.server, data.formData, config).then(res => res.data).catch(error => {\n                    throw new Error(error);\n                    console.dir(error);\n                })\n            },\n            delete: (data) =>\n                axios.delete(this.server + '/' + data.data).then(res => res.data).catch(error => {\n                    throw new Error(error);\n                    console.dir(error);\n                }),\n            update: (data) => {\n                const formData = data.formData;\n                const config = {\n                    onUploadProgress: function (progressEvent) {\n                        const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n                        data && data.action(percentCompleted);\n                    }\n                };\n                return axios.put(this.server + '/' + formData.getAll('_id'), formData, config).then(res => {\n                    console.log('Update response: ', res);\n                    return res.data;\n                }).catch(error => {\n                    throw new Error(error);\n                    console.dir(error);\n                })\n            }\n        }\n    }\n\n\n    // Validation\n\n\n}\n\nexport default Model;\n","import Model from './Model';\n\nclass ActiveRecord extends Model{\n    mode = 'create';\n    _uploadProgress = 0;\n    _form = {};\n    _subscribers = [];\n\n    constructor(name) {\n        super(name);\n        this.debug = true;\n    }\n\n    get __class() {\n        return 'ActiveRecord';\n    }\n\n    subscribe(method) {\n        if (Array.isArray(method)) {\n            this._subscribers = [...this._subscribers, ...method];\n        } else {\n            this._subscribers.push(method);\n        }\n        return this;\n    }\n\n    forceUpdateOnSubscribers = (method) => {\n        this._subscribers.includes(method) && this.forceUpdate();\n    }\n\n    forceUpdate() {\n\n    }\n\n    set form(form) {\n        this._form = {};\n        for (let key in form) {\n            this._form[key] = form[key];\n        }\n        return this;\n    }\n\n    get form() {\n        return this._form;\n    }\n\n    setUploadProgress(value) {\n        this._uploadProgress = value;\n        // this.forceUpdateOnSubscribers('setUploadProgress');\n        if (this._uploadProgress > 99) {\n            this.form = {};\n            this.mode = 'create';\n        }\n    }\n\n    get uploadProgress() {\n        return this._uploadProgress;\n    }\n\n    /**\n     * Avoid problem of bound to unbound controls on form\n     */\n    resetForm() {\n        Object.keys(this.form).forEach( key => {\n            this._form[key] = '';\n        });\n    }\n\n    submitForm(createAction, updateAction) {\n        const formData = new FormData();\n        Object.keys(this.form).map(key => {\n            formData.append(key, this.form[key]);\n        });\n\n        this.hasId ? updateAction({formData, action:this.setUploadProgress}) : createAction({formData, action:this.setUploadProgress});\n        this.resetForm();\n        return this;\n    }\n\n    get hasId() {\n        if(this.form['id'] && this.form['id'].length > 0) return true;\n        if(this.form['_id'] && this.form['_id'].length > 0) return true;\n        return false;\n    }\n\n\n}\n\nexport default ActiveRecord;\n","import ActiveRecord from './ActiveRecord';\n\nclass Show extends ActiveRecord {\n    constructor(name) {\n        super(name);\n        this.form = {\n            title: '',\n            description: '',\n            episodes: [],\n        };\n        this.setImagePath = this.setImagePath.bind(this);\n        this.setVideoPath = this.setVideoPath.bind(this);\n        console.log('Shows', this.types);\n    }\n\n    onSelect = () => {\n\n    }\n\n    getFiles = () => {\n\n    }\n\n    set videoPath(files) {\n        this._form.video_path = files[0];\n    }\n\n    setVideoPath(files) {\n        this._form.video_path = files[0];\n    }\n\n    set imagePath(files) {\n        this._form.image_path = files[0];\n    }\n\n    setImagePath(files) {\n        this._form.image_path = files[0];\n    }\n\n    /*get types() {\n        const superTypes = super.types;\n        const name = 'episodes';\n\n        return Object.assign({}, superTypes,\n            {\n                episodes: {\n                    create: name + '.create',\n                    create_success: name + '.create.success',\n                    create_fail: name + '.create.fail',\n                }\n            });\n    }*/\n\n\n}\n\nexport default Show;\n","import ActiveRecord from './ActiveRecord';\nimport models from '../store/models';\n\nclass Episode extends ActiveRecord {\n    _genreList = [\n        {\n            value: 'pop',\n            label: 'Pop'\n        },\n        {\n            value: 'jazz',\n            label: 'Jazz'\n        },\n        {\n            value: 'rock',\n            label: 'Rock'\n        },\n        {\n            value: 'disco',\n            label: 'Disco'\n        },\n    ];\n\n    constructor(name) {\n        super(name);\n        this.form = {\n            title: '',\n            description: '',\n            mode: this.types.create,\n            image: null,\n            video: null,\n            genre: 'rock'\n        };\n        this.setImagePath = this.setImagePath.bind(this);\n        this.setVideoPath = this.setVideoPath.bind(this);\n    }\n\n    getFiles = () => {\n\n    };\n\n    set videoPath(files) {\n        this._form.video_path = files[0];\n    }\n\n    setVideoPath(files) {\n        this._form.video_path = files[0];\n    }\n\n    set imagePath(files) {\n        this._form.image_path = files[0];\n    }\n\n    setImagePath(files) {\n        this._form.image_path = files[0];\n    }\n\n    onSelect2 = (item) => {\n        this.genre = item;\n    };\n\n    get selected() {\n        return this.genreList.find(item => item.value == this.form.genre);\n    }\n\n    get genreList() {\n        return this._genreList;\n    }\n\n    // INTERFACE Select\n    get data() {\n        return this._genreList;\n    }\n\n    set genre(item) {\n        this.form.genre = item.value;\n    }\n\n    setGenre(item) {\n        this.form.genre = item.value;\n    }\n\n    // INTERFACE Select\n    onSelect = (item) => {\n        this.form.genre = item.value;\n    };\n\n    get actions() {\n        const actionsSuper = super.actions;\n        actionsSuper.read = models.shows.actions.read;\n        actionsSuper.create_success = models.shows.actions.read;\n        return actionsSuper;\n    }\n}\n\nexport default Episode;\n","import ActiveRecord from './ActiveRecord';\nimport axios from \"axios\";\n\nclass Login extends ActiveRecord {\n    constructor(name) {\n        super(name);\n        this.form = {\n            username: 'root',\n            password: 'root',\n            authenticated: false\n        };\n    }\n\n    newApiRead = (user) => console.log('Inside api', user) ||\n        axios.get(this.server, {\n            auth: {\n                username: user.data.username,\n                password: user.data.password\n            },\n            headers: {\n                username: user.data.username,\n                password: user.data.password\n            }\n        }).then(res => res.data).catch(error => {\n            throw new Error(error);\n            console.dir(error);\n        });\n\n    get api() {\n        const newApi = super.api;\n        newApi.read = this.newApiRead;\n        return newApi;\n    }\n\n}\n\nexport default Login;\n","// name, server, form, forceUpdate\nimport Show from \"../Models/Show\";\nimport Episode from \"../Models/Episode\";\nimport Login from \"../Models/Login\";\n\n\nconst models = {\n    shows: new Show('shows'),\n    users: new Show('users'),\n    logins: new Login('logins'),\n    episodes: new Episode('episodes')\n};\n\nexport default models;\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Link} from 'react-router-dom';\nimport {withRouter} from \"react-router-dom\";\nimport axios from 'axios';\nimport {loginAction} from \"../actions/LoginAction\";\nimport models from '../store/models';\n\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: 'root',\n            password: 'root',\n            login: models.logins,\n        }\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        const field = e.target.id;\n        const value = e.target.value;\n        this.setState({[field]: value});\n    }\n\n    handleLogin(e) {\n        e.preventDefault();\n        const {readAction} = this.props;\n        const user = {\n            username: this.state.username,\n            password: this.state.password\n        };\n        readAction(user);\n\n\n        return;\n        const url = 'http://localhost:8090/api/v1/login';\n        axios.get(url, {\n            auth: {\n                username: this.state.username,\n                password: this.state.password\n            },\n            headers: {\n                username: this.state.username,\n                password: this.state.password\n            }\n\n        }).then(res => {\n            if (res.data && res.data.authenticated) {\n                this.setState({login: true});\n            }\n            console.log('res', res.data);\n            return res.data;\n        }).catch(error => {\n            throw new Error(error);\n            console.dir(error);\n        });\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        const {logins} = nextProps;\n        console.log('componentWillReceiveProps', logins);\n        if (logins && logins.form.authenticated) {\n            this.props.history.push('/dashboard');\n        }\n    }\n\n    render() {\n\n        // this.state.login && this.props.history.push('/dashboard');\n\n        return (\n            <section id=\"dashboard\" className=\"dashboard\">\n                <div className=\"dashboard--center\" style={{textAlign: 'center', float: 'none'}}>\n\n                    <div style={{\n                        display: 'flex',\n                        width: '100%',\n                        height: '100%',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        justifyContent: 'center'\n                    }}>\n\n                        <form action=\"\"\n                              style={{width: '500px', backgroundColor: 'black', padding: '40px', borderRadius: '5px'}}>\n                            <p style={{textAlign: 'right'}}><Link to=\"/signup\"> Sign up </Link></p>\n                            <h1>Login</h1>\n                            <div className=\"row\">\n                                <div className=\"col-1-of-1\">\n                                    <input type=\"text\" id=\"username\" placeholder=\"Type username\"\n                                           value={this.state.username}\n                                           onChange={e => this.handleChange(e)}/>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"col-1-of-1\">\n                                    <input type=\"password\" id=\"password\" placeholder=\"Type password\"\n                                           value={this.state.password}\n                                           onChange={e => this.handleChange(e)}/>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"col-1-of-1\">\n\n                                    <button style={{width: '80px'}} type=\"submit\"\n                                            onClick={e => this.handleLogin(e)}><i\n                                        className=\"fas fa-sign-in-alt\"></i> Login\n                                    </button>\n\n                                </div>\n                            </div>\n\n                        </form>\n\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\n/**\n * Get data from store\n * @param state\n */\nconst mapStateToProps = state => ({\n    logins: state.logins,\n});\n\n/**\n * Import action from dir action above - but must be passed to connect method in order to trigger reducer in store\n * @type {{UserUpdate: UserUpdateAction}}\n */\nconst mapActionsToProps = {\n    readAction : models.logins.actions.read\n};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Login));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {Link} from 'react-router-dom';\nimport {apiServer} from '../common/constants';\nimport axios from 'axios';\n\n\nclass Signup extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password: '',\n            email: '',\n            login: false\n        }\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        const field = e.target.id;\n        const value = e.target.value;\n        this.setState({[field]: value});\n    }\n\n    async handleSignUp(e) {\n        e.preventDefault();\n        const url = apiServer + '/api/v1/users';\n        const {username, email, password} = this.state;\n        const item = {username, email, password};\n\n        try {\n            await axios.post(url, {item})\n                .then(res => {\n                    if (res.data && res.data.authenticated) {\n                        this.setState({login: true});\n                    }\n                    console.log('res', res.data);\n                    if(res.data.status === 1) {\n                        this.props.history.push('/dashboard');\n                    }\n                    return res.data;\n                }).catch(error => {\n                throw new Error(error);\n                console.dir(error);\n            });\n        } catch (e) {\n            alert('Some error occurred, please refresh page. ' + e.message);\n        }\n    }\n\n    render() {\n\n        this.state.login && this.props.history.push('/dashboard');\n\n        return (\n            <section id=\"dashboard\" className=\"dashboard\">\n                <div className=\"dashboard--center\" style={{textAlign: 'center', float: 'none'}}>\n\n                    <div style={{\n                        display: 'flex',\n                        width: '100%',\n                        height: '100%',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        justifyContent: 'center'\n                    }}>\n\n                        <form action=\"\"\n                              style={{width: '500px', backgroundColor: 'black', padding: '40px', borderRadius: '5px'}}>\n                            <p style={{textAlign: 'right'}}><Link to=\"/login\"> Back to login </Link></p>\n                            <h1>Sign Up</h1>\n                            <div className=\"row\">\n                                <div className=\"col-1-of-1\">\n                                    <input type=\"text\" id=\"email\" placeholder=\"Type email\" value={this.state.email}\n                                           onChange={e => this.handleChange(e)}/>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"col-1-of-1\">\n                                    <input type=\"text\" id=\"username\" placeholder=\"Type username\"\n                                           value={this.state.username}\n                                           onChange={e => this.handleChange(e)}/>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"col-1-of-1\">\n                                    <input type=\"password\" id=\"password\" placeholder=\"Type password\"\n                                           value={this.state.password}\n                                           onChange={e => this.handleChange(e)}/>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"col-1-of-1\">\n\n                                    <button style={{width: '80px'}} type=\"submit\"\n                                            onClick={e => this.handleSignUp(e)}><i\n                                        className=\"fas fa-user-edit\"></i> Sign up\n                                    </button>\n\n                                </div>\n                            </div>\n\n                        </form>\n\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\n/**\n * Get data from store\n * @param state\n */\nconst mapStateToProps = state => ({\n    spot: state.spot,\n});\n\n/**\n * Import action from dir action above - but must be passed to connect method in order to trigger reducer in store\n * @type {{UserUpdate: UserUpdateAction}}\n */\nconst mapActionsToProps = {};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Signup));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\n\nimport Sidebar from './Sidebar';\n\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        return (\n            <section id=\"dashboard\" className=\"dashboard\">\n                <Sidebar/>\n                <div className=\"dashboard--center\" onClick={this.handleCenterClick}>\n                    <h1>Profile</h1>\n                </div>\n            </section>\n        )\n    }\n}\n\n/**\n * Get data from store\n * @param state\n */\nconst mapStateToProps = state => ({\n    spot: state.spot,\n});\n\n/**\n * Import action from dir action above - but must be passed to connect method in order to trigger reducer in store\n * @type {{UserUpdate: UserUpdateAction}}\n */\nconst mapActionsToProps = {};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Profile));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\n\nimport Sidebar from './Sidebar';\n\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        return (\n            <section id=\"dashboard\" className=\"dashboard\">\n                <Sidebar/>\n                <div className=\"dashboard--center\" onClick={this.handleCenterClick}>\n                    <h1>Settings</h1>\n                </div>\n            </section>\n        )\n    }\n}\n\n/**\n * Get data from store\n * @param state\n */\nconst mapStateToProps = state => ({\n    spot: state.spot,\n});\n\n/**\n * Import action from dir action above - but must be passed to connect method in order to trigger reducer in store\n * @type {{UserUpdate: UserUpdateAction}}\n */\nconst mapActionsToProps = {};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Settings));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\n\nimport Sidebar from './Sidebar';\n\n\nclass Reports extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        return (\n            <section id=\"dashboard\" className=\"dashboard\">\n                <Sidebar/>\n                <div className=\"dashboard--center\" onClick={this.handleCenterClick}>\n                    <h1>Dashboard</h1>\n                </div>\n            </section>\n        )\n    }\n}\n\n/**\n * Get data from store\n * @param state\n */\nconst mapStateToProps = state => ({\n    spot: state.spot,\n});\n\n/**\n * Import action from dir action above - but must be passed to connect method in order to trigger reducer in store\n * @type {{UserUpdate: UserUpdateAction}}\n */\nconst mapActionsToProps = {};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Reports));\n","import {\n    VIDEO_READ, VIDEO_READ_SUCCESS, VIDEO_READ_FAIL,\n    VIDEO_ADD, VIDEO_ADD_SUCCESS, VIDEO_ADD_FAIL,\n    VIDEO_DELETE, VIDEO_DELETE_SUCCESS, VIDEO_DELETE_FAIL,\n    VIDEO_UPDATE, VIDEO_UPDATE_SUCCESS, VIDEO_UPDATE_FAIL,\n    VIDEO_SEARCH, VIDEO_SEARCH_SUCCESS, VIDEO_SEARCH_FAIL,\n    VIDEO_EDIT, VIDEO_EDIT_SUCCESS, VIDEO_EDIT_FAIL,\n    EPISODE_ADD, EPISODE_ADD_SUCCESS\n} from '../types/Video';\n\nexport const videoReadAction = () => {\n    console.log('Inside videoReadAction');\n    return {\n        type: VIDEO_READ,\n        payload: {}\n    }\n};\n\nexport const videoReadSuccessAction = (videos) => {\n    return {\n        type: VIDEO_READ_SUCCESS,\n        payload: videos\n    }\n};\n\nexport const videoReadFailAction = (err) => {\n    console.log(err);\n    return {\n        type: VIDEO_READ_FAIL,\n        payload: {err}\n    }\n};\n\n\nexport const videoAddAction = (video, action) => {\n    console.log('Inside videoAddAction', video, action);\n    return {\n        type: VIDEO_ADD,\n        payload: {\n            video,\n            action\n        }\n    }\n};\n\nexport const videoAddSuccessAction = (result) => {\n    return {\n        type: VIDEO_ADD_SUCCESS,\n        payload: {\n            result\n        }\n    }\n};\n\nexport const videoAddFailAction = (err) => {\n    console.log(err);\n    return {\n        type: VIDEO_ADD_FAIL,\n        payload: {err}\n    }\n};\n\n\nexport const videoDeleteAction = (video) => {\n    console.log('Inside videoDeleteAction', video);\n    return {\n        type: VIDEO_DELETE,\n        payload: {\n            video\n        }\n    }\n};\n\nexport const videoDeleteSuccessAction = (result) => {\n    return {\n        type: VIDEO_DELETE_SUCCESS,\n        payload: {\n            result\n        }\n    }\n};\n\nexport const videoDeleteFailAction = (err) => {\n    console.log(err);\n    return {\n        type: VIDEO_DELETE_FAIL,\n        payload: {err}\n    }\n};\n\n\nexport const videoUpdateAction = (formData, action) => {\n    console.log('Inside videoUpdateAction', formData, action);\n    return {\n        type: VIDEO_UPDATE,\n        payload: {\n            formData, action\n        }\n    }\n};\n\nexport const videoUpdateSuccessAction = (result) => {\n    return {\n        type: VIDEO_UPDATE_SUCCESS,\n        payload: {\n            result\n        }\n    }\n};\n\nexport const videoUpdateFailAction = (err) => {\n    console.log(err);\n    return {\n        type: VIDEO_UPDATE_FAIL,\n        payload: {err}\n    }\n};\n\n\nexport const videoSearchAction = (str) => {\n    console.log('Inside videoUpdateAction', str);\n    return {\n        type: VIDEO_SEARCH,\n        payload: {\n            str\n        }\n    }\n};\n\nexport const videoSearchSuccessAction = (result) => {\n    return {\n        type: VIDEO_SEARCH_SUCCESS,\n        payload: {\n            result\n        }\n    }\n};\n\nexport const videoSearchFailAction = (err) => {\n    console.log(err);\n    return {\n        type: VIDEO_SEARCH_FAIL,\n        payload: {err}\n    }\n};\n\nexport const videoEditAction = (video) => {\n    console.log('Inside videoEditAction', video);\n    video.mode = 'update';\n    return {\n        type: VIDEO_EDIT,\n        payload: {\n            video,\n        }\n    }\n};\n\nexport const videoEditSuccessAction = (result) => {\n    return {\n        type: VIDEO_EDIT_SUCCESS,\n        payload: {\n            result\n        }\n    }\n};\n\nexport const episodeAddAction = (showId, episode, action) => {\n    console.log('Inside episodeAddAction', showId, episode, action);\n    return {\n        type: EPISODE_ADD,\n        payload: {\n            showId,\n            episode,\n            action\n        }\n    }\n};\nexport const episodeAddSuccessAction = (result) => {\n    console.log('Inside episodeAddSuccessAction', result);\n    return {\n        type: EPISODE_ADD_SUCCESS,\n        payload: {\n            result\n        }\n    }\n};\n","export const VIDEO_READ = 'Video.Read';\nexport const VIDEO_READ_SUCCESS = 'Video.Read.Success';\nexport const VIDEO_READ_FAIL = 'Video.Read.Fail';\n\nexport const VIDEO_ADD = 'Video.Add';\nexport const VIDEO_ADD_SUCCESS = 'Video.Add.Success';\nexport const VIDEO_ADD_FAIL = 'Video.Add.Fail';\n\nexport const VIDEO_UPDATE = 'Video.Update';\nexport const VIDEO_UPDATE_SUCCESS = 'Video.Update.Success';\nexport const VIDEO_UPDATE_FAIL = 'Video.Update.Fail';\n\nexport const VIDEO_DELETE = 'Video.Delete';\nexport const VIDEO_DELETE_SUCCESS = 'Video.Delete.Success';\nexport const VIDEO_DELETE_FAIL = 'Video.Delete.Fail';\n\nexport const VIDEO_SEARCH = 'Video.Search';\nexport const VIDEO_SEARCH_SUCCESS = 'Video.Search.Success';\nexport const VIDEO_SEARCH_FAIL = 'Video.Search.Fail';\n\nexport const VIDEO_EDIT = 'Video.Edit';\nexport const VIDEO_EDIT_SUCCESS = 'Video.Edit.Success';\nexport const VIDEO_EDIT_FAIL = 'Video.Edit.Fail';\n\nexport const EPISODE_ADD = 'Episode.Add';\nexport const EPISODE_ADD_SUCCESS = 'Episode.Add.Success';\nexport const EPISODE_ADD_FAIL = 'Episode.Add.Fail';\n","import React from 'react';\n// @TODO add to package\nimport uuidv4 from 'uuid/v4';\n\nclass File extends React.Component {\n\n    /**\n     * Handles only model\n     * @param props\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            model: {}\n        };\n        this.refImage = React.createRef();\n        this.refDisplayImage = React.createRef();\n        this.handleChange = this.handleChange.bind(this);\n        this.readUploadingImage = this.readUploadingImage.bind(this);\n    }\n\n    handleChange() {\n        const files = this.refImage.current.files;\n        let {model, type} = this.props;\n        if (model && type == 'image') model.setImagePath(files);\n        if (model && type == 'video') model.setVideoPath(files);\n\n        if (this.refImage.current.accept.includes('image')) {\n            this.readUploadingImage();\n        }\n    }\n\n    readUploadingImage() {\n        const input = this.refImage.current; // used for all ie image and video\n\n        if (input.files && input.files[0]) {\n            const reader = new FileReader();\n            reader.onload = (e) => {\n                this.refDisplayImage.current.src = e.target.result;\n            };\n            reader.readAsDataURL(input.files[0]);\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        const {model} = nextProps;\n        model && this.setState({model});\n    }\n\n    componentDidMount() {\n        const {model} = this.props;\n        console.log('File', model);\n        model && this.setState({model});\n    }\n\n    render() {\n        const id = uuidv4();\n        let accept = \"*\";\n        const {type} = this.props;\n        if (type && type == 'image') accept = \"image/x-png,image/gif,image/jpeg\";\n        if (type && type == 'video') accept = \"video/mp4,video/x-m4v,video/*\";\n        const {model} = this.state;\n        if (!model.form) return <div>Loading ...</div>\n\n        return (\n            <div className=\"file-upload\">\n                <header>\n                    <p style={{margin: 0}}><i className=\"fas fa-cloud-upload-alt\"></i> &nbsp;\n                        UPLOAD FILES\n                    </p>\n                </header>\n                <main>\n                    <input accept={accept} ref={this.refImage} multiple type=\"file\" id={id}\n                           onChange={this.handleChange}/>\n                    <label htmlFor={id} className=\"upload\">\n                        <i className=\"fas fa-cloud-upload-alt\"></i>\n                        <p>Drag your files here</p>\n                    </label>\n                    <div className=\"display\">\n                        {type && type == 'video'\n                            ? <video width=\"100%\" controls autoPlay={true} key={model.form.video}>\n                                <source src={model.form.video} type=\"video/mp4\"></source>\n                            </video>\n                            : <img ref={this.refDisplayImage} style={{width: '100%'}} src={model.form.image}\n                                   alt=\"Image\"/>\n                        }\n                    </div>\n                </main>\n                <footer>\n                    <span className=\"progress\" style={{width: Number(model.uploadProgress) + '%'}}></span>\n                </footer>\n\n            </div>\n        )\n    }\n}\n\nFile.defaultProps = {\n    id: 'image_upload',\n    accept: 'image/x-png,image/gif,image/jpeg',\n    getFiles: (files) => console.log('You chose these files: ', files)\n};\n\nexport default File;\n","import React from 'react';\n\nclass Alert extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false\n        };\n        this.setTimeoutId = null;\n        this.types = {\n            success: {cls: 'alert alert-success', icon: 'far fa-check-square'},\n            warning: {cls: 'alert alert-warning', icon: 'fas fa-exclamation-triangle'},\n            info: {cls: 'alert alert-info', icon: 'fas fa-info-circle'},\n            danger: {cls: 'alert alert-danger', icon: 'fas fa-radiation-alt'},\n        };\n        this.onClose = this.onClose.bind(this);\n    }\n\n    onClose() {\n        this.setState({visible: false});\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({visible: true});\n        clearTimeout(this.setTimeoutId);\n        this.setTimeoutId = setTimeout(() => {\n            this.setState({visible: false});\n        }, 3000);\n    }\n\n    componentDidMount() {\n        clearTimeout(this.setTimeoutId);\n        this.setTimeoutId = setTimeout(() => {\n            this.setState({visible: false});\n        }, 3000);\n    }\n\n    render() {\n        const {title, type} = this.props;\n\n        return (\n            <div className={this.types[type].cls} style={{display: this.state.visible ? 'flex' : 'none'}}>\n                <div className=\"alert-left\"><i className={this.types[type].icon}></i></div>\n                <div className=\"alert-middle\">{title}</div>\n                <div className=\"alert-right\">\n                    <span onClick={this.onClose}>\n                        <i className=\"far fa-window-close\"></i>\n                    </span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Alert;\n","import React from 'react';\n\nclass VideoPlayer extends React.Component {\n\n    /**\n     * video = {title, description, genre, image, video, views}\n     * @param props\n     */\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.onClose = this.onClose.bind(this);\n    }\n\n    onClose() {\n        this.setState({visible: false});\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        const {video} = nextProps;\n        this.setState({video});\n    }\n\n    componentDidMount() {\n        const {video} = this.props;\n        this.setState({video});\n    }\n\n\n    render() {\n        const {video} = this.state;\n        if (!video) return <div>Loading</div>\n\n        return (\n            <article className=\"video-view\" style={{marginTop: '13px'}}>\n                <header>\n                    <i className=\"fas fa-film\"></i>\n                    <h2>{video.title}</h2>\n                </header>\n                <main>\n                    <div className=\"left\">\n                        <video width=\"100%\" controls autoPlay key={video.video}>\n                            <source\n                                src={video.video}\n                                type=\"video/mp4\"></source>\n                        </video>\n                    </div>\n\n                    <div className=\"footer\">\n                        <div className=\"footer-image\">\n                            <img src={video.image}\n                                 alt=\"image\"/>\n                        </div>\n\n                        <div className=\"footer-detail\">\n                            <div className=\"footer-row\">\n                                <label htmlFor=\"\">Genre</label>\n                                <p>{video.genre}</p>\n                            </div>\n                            <div className=\"footer-row\">\n                                <label htmlFor=\"\">Description</label>\n                                <p>{video.description}</p>\n                            </div>\n                            <div className=\"footer-row\">\n                                <i className=\"far fa-eye\"></i>\n                                <p>{video.views}</p>\n                            </div>\n                        </div>\n                    </div>\n                </main>\n\n            </article>\n        )\n    }\n}\n\nexport default VideoPlayer;\n","import {apiServer} from \"../common/constants\";\n\nclass Video {\n    _mode = 'create';\n    _genreList = [\n        {\n            value: 'pop',\n            label: 'Pop'\n        },\n        {\n            value: 'jazz',\n            label: 'Jazz'\n        },\n        {\n            value: 'rock',\n            label: 'Rock'\n        },\n        {\n            value: 'disco',\n            label: 'Disco'\n        },\n    ];\n    _uploadProgress = 0;\n    _form = {\n        id: '',\n        title: '',\n        description: '',\n        genre: 'rock',\n        image_path: 'images/ff50cfe0-f591-11e9-b16f-7da8357c7944_14.png',\n        video_path: 'videos/ff50cfe0-f591-11e9-b16f-7da8357c7944_songs14.mp4',\n    };\n    _formResult = {\n        affectedRows: 0\n    };\n    _display_fields = ['id', 'title', 'genre'];\n    _subscribed = [];\n    forceUpdate = () => null;\n    _videoUrl = null;\n    _imageUrl = null;\n\n    // If form is null then new record - create mode\n    constructor(form = null) {\n        if (form && typeof form == 'object') {\n            this.form = form;\n            this.mode = 'update';\n        } else if (form && typeof form == 'function') {\n            this.forceUpdate = form;\n        }\n        console.log('TEST Video constructor', this._form);\n        this.setGenre = this.setGenre.bind(this);\n        this.setUploadProgress = this.setUploadProgress.bind(this);\n        this.setImagePath = this.setImagePath.bind(this);\n        this.setVideoPath = this.setVideoPath.bind(this);\n\n        this.onSelect = this.onSelect.bind(this);\n    }\n\n    get __class() {\n        return 'Video';\n    }\n\n    subscribe(method) {\n        if (Array.isArray(method)) {\n            this._subscribed = [...this._subscribed, ...method];\n        } else {\n            this._subscribed.push(method);\n        }\n        console.log('Subscribed', this._subscribed);\n    }\n\n    callSubscribed(method) {\n        console.log('Subscribed callSubscribed', method);\n        if (this._subscribed.includes(method)) {\n            console.log('Subscribed callSubscribed if', method);\n            this.forceUpdate();\n        }\n    }\n\n\n    print() {\n        console.log('Videos constructor', this._mode, this._form);\n    }\n\n    // Item, not string\n    // INTERFACE Select\n    get selected() {\n        return this.genreList.find(item => item.value == this.form.genre);\n    }\n\n    get genreList() {\n        return this._genreList;\n    }\n\n    // INTERFACE Select\n    get data() {\n        return this._genreList;\n    }\n\n    set genre(item) {\n        this._form.genre = item.value;\n    }\n\n    setGenre(item) {\n        this._form.genre = item.value;\n    }\n\n    // INTERFACE Select\n    onSelect(item) {\n        this.genre = item;\n    }\n\n    get id() {\n        return this._form.id ? this._form.id : this._form._id;\n    }\n\n    get genre() {\n        return this._form.genre;\n    }\n\n    // Model editing mode\n    set mode(m) {\n        this._mode = m;\n    }\n\n    get mode() {\n        return this._mode;\n    }\n\n    set form(form) {\n        console.log('TEST Video form', this._form);\n        this._form = form;\n    }\n\n    get form() {\n        return this._form;\n    }\n\n    set formResult(r) {\n        this._formResult = r;\n        if (r && r.affectedRows > 0) {\n            this.mode = 'update';\n            this._imageUrl = r.image_path;\n            this._videoUrl = r.video_path;\n            this.callSubscribed('formResult');\n        }\n    }\n\n    set formFieldByE(e) {\n        this._form[e.target.id] = e.target.value;\n    }\n\n    get videoUrl() {\n        if (this._form.result && this._form.result.video_url) {\n            return this._form.result.video_url;\n        }\n        if(this._form.video.includes('http')) return this._form.video;\n        if(this._form.videoUrl) return this._form.videoUrl;\n        if(this._form.video) return this._form.video;\n    }\n\n    /**\n     * Do we have model\n     * @returns {*}\n     */\n    get imageUrl() {\n        if (this._form.result && this._form.result.image_url) {\n            return this._form.result.image_url;\n        }\n        if(this._form.image.includes('http')) return this._form.image;\n        if(this._form.imageUrl) return this._form.imageUrl;\n        if(this._form.image) return this._form.image;\n    }\n\n    set videoPath(files) {\n        this._form.video_path = files[0];\n    }\n\n    setVideoPath(files) {\n        this._form.video_path = files[0];\n    }\n\n    set imagePath(files) {\n        this._form.image_path = files[0];\n    }\n\n    setImagePath(files) {\n        this._form.image_path = files[0];\n    }\n\n    set uploadProgress(value) {\n        this._uploadProgress = value;\n    }\n\n    setUploadProgress(value) {\n        this._uploadProgress = value;\n        this.callSubscribed('setUploadProgress');\n            console.log('TEST Video form setUploadProgress', this.uploadProgress, value);\n        if(this.uploadProgress > 99) {\n            this.resetForm();\n            console.log('TEST Video form setUploadProgress', this.form, this.mode);\n        }\n    }\n\n    resetForm() {\n        this.form = new Video().form;\n        this.mode = 'create';\n    }\n\n    get uploadProgress() {\n        return this._uploadProgress;\n    }\n\n    submitForm(action) {\n        const formData = new FormData();\n\n        Object.keys(this._form).map(key => {\n            formData.append(key, this.form[key]);\n            console.log('Form key', key, formData.getAll(key));\n        });\n\n        console.log('Before action', formData);\n\n        this.mode === 'create' ? action(formData, this.setUploadProgress) : action(formData, this.setUploadProgress);\n    }\n}\n\nexport default Video;\n\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\n\nimport Sidebar from './Sidebar';\nimport Center from './Center';\nimport {\n    videoAddAction,\n    videoReadAction,\n    videoUpdateAction,\n    videoDeleteAction,\n    videoEditAction\n} from \"../actions/VideoAction\";\nimport Table from './Table';\n// import File from '@softhem.se/file';\nimport File from './File';\nimport Select from './Select';\nimport Alert from './Alert';\nimport VideoPlayer from './VideoPlayer';\nimport Video from '../Models/Video';\n\n\nclass Videos extends React.Component {\n    constructor(props) {\n        super(props);\n        this._forceUpdate = this._forceUpdate.bind(this);\n\n        const video = new Video(this._forceUpdate);\n        video.subscribe(['setUploadProgress', 'formResult']);\n\n        this.state = {\n            video: video,\n            alert: {\n                type: 'info',\n                title: 'Info'\n            }\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    }\n\n    _forceUpdate() {\n        this.forceUpdate();\n    }\n\n    handleChange(e) {\n        const {video} = this.state;\n        video.formFieldByE = e;\n        if (false && e.target.id === 'title') {\n            const {list} = this.state;\n            const filtered = list.filter(item => item._form.title.includes(video.form.title));\n            console.log(list, filtered);\n        }\n        this.setState({video});\n    }\n\n    handleFormSubmit(e) {\n        e.preventDefault();\n        const {video} = this.state;\n\n        if (this.props.match.params.id || video.mode == 'update') {\n            video.submitForm(this.props.videoUpdateAction);\n            const alerted = {type: 'info', title: 'Video updated successfully'};\n            this.setState({alert:alerted});\n        } else {\n            video.submitForm(this.props.videoAddAction);\n            const alerted = {type: 'info', title: 'Video added successfully'};\n            this.setState({alert:alerted});\n        }\n        this.forceUpdate();\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        console.log('componentWillReceiveProps Videos', nextProps);\n        const {videos} = nextProps;\n        this.setState({list: videos.list});\n\n        if (videos && videos.form) {\n            const {video} = this.state;\n            if(videos.form.mode === 'update') {\n                video.form = nextProps.videos.form;\n                video.mode = 'update';\n            }\n            video.formResult = nextProps.videos.form.result;\n        }\n    }\n\n    componentDidMount() {\n        console.log('componentDidMount Videos', this.props);\n        const {videos: {list}, videoReadAction} = this.props;\n\n        if (! list || list.length < 1) {\n            videoReadAction();\n        } else {\n            this.setState({list});\n        }\n    }\n\n    render() {\n        const {video} = this.state;\n\n        return (\n            <section id=\"dashboard\" className=\"dashboard\">\n                <Sidebar/>\n                <Center>\n                    <div className=\"row\">\n                        <div className=\"col-1-of-1\">\n                            <h1>Shows</h1>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-1-of-2\">\n                            <form>\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-1\">\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-1\">\n                                        <input type=\"text\" id=\"title\" placeholder=\"Type title\"\n                                               value={video.form.title}\n                                               onChange={e => this.handleChange(e)}/>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-1\">\n                                        <textarea cols={40} rows={5} id=\"description\" placeholder=\"Type description\"\n                                                  value={video.form.description}\n                                                  onChange={e => this.handleChange(e)}> </textarea>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-3\">\n                                        <div className=\"dashboard--container\">\n\n                                            <button style={{width: '80px'}} type=\"submit\"\n                                                    onClick={e => this.handleFormSubmit(e)}><i\n                                                className=\"fas fa-save\"></i> Save\n                                            </button>\n\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </form>\n                        </div>\n                    </div>\n\n                    <Table fields={['id', 'title', 'description']} items={this.props.videos.list}\n                           itemViewAction={(arr) => this.props.history.push('/videos/' + (arr['id'] ? arr['id'] : arr['_id']) )}\n                           itemEditAction={this.props.videoEditAction} itemDeleteAction={this.props.videoDeleteAction}/>\n                </Center>\n            </section>\n        )\n    }\n}\n\n/**\n * Get data from store\n * @param state\n */\nconst mapStateToProps = state => ({\n    videos: state.videos,\n});\n\n/**\n * Import action from dir action above - but must be passed to connect method in order to trigger reducer in store\n * @type {{UserUpdate: UserUpdateAction}}\n */\nconst mapActionsToProps = {\n    videoAddAction,\n    videoReadAction,\n    videoUpdateAction,\n    videoDeleteAction,\n    videoEditAction\n};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Videos));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\n\nimport Sidebar from './Sidebar';\nimport Center from './Center';\nimport {\n    videoAddAction,\n    videoReadAction,\n    videoUpdateAction,\n    videoDeleteAction,\n    videoEditAction\n} from \"../actions/VideoAction\";\nimport Table from './Table';\n// import File from '@softhem.se/file';\nimport File from './File';\nimport Select from './Select';\nimport Alert from './Alert';\nimport VideoPlayer from './VideoPlayer';\nimport Video from '../Models/Video';\n\n\nclass VideosView extends React.Component {\n    constructor(props) {\n        super(props);\n        this._forceUpdate = this._forceUpdate.bind(this);\n\n        const video = new Video(this._forceUpdate);\n        video.subscribe(['setUploadProgress', 'formResult']);\n\n        this.state = {\n            video: video,\n            alert: {\n                type: 'info',\n                title: 'Info'\n            }\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    }\n\n    _forceUpdate() {\n        this.forceUpdate();\n    }\n\n    handleChange(e) {\n        const {video} = this.state;\n        video.formFieldByE = e;\n        if (e.target.id === 'title') {\n            const {list} = this.state;\n            const filtered = list.filter(item => item.form.title.includes(video.form.title));\n            console.log(list, filtered);\n        }\n        this.setState({video});\n    }\n\n    handleFormSubmit(e) {\n        e.preventDefault();\n        const {video} = this.state;\n\n        const show = {\n            id: this.props.match.params.id,\n            episode: {\n                title: video._form.title,\n                description: video._form.description,\n                genre: video._form.genre,\n            },\n            image_path: video._form.image_path,\n            video_path: video._form.video_path,\n        };\n\n        const formData = new FormData();\n\n        Object.keys(show).map(key => {\n            formData.append(key, show[key]);\n        });\n\n        this.props.videoAddAction(formData, video.setUploadProgress);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        const {id} = nextProps.match.params;\n        const show = this.filterById(id, nextProps.videos.list);\n        console.log('VideosView componentWillReceiveProps Videos', id, show, nextProps);\n        this.setState({show});\n\n        if (nextProps.videos && nextProps.videos.form && Object.keys(nextProps.videos.form).length > 0) {\n            const {video} = this.state;\n            video.form = nextProps.videos.form;\n            video.mode = 'update';\n            video.formResult = nextProps.videos.form.result;\n        }\n    }\n\n    componentDidMount() {\n        const {id} = this.props.match.params;\n        const show = this.filterById(id, this.props.videos.list);\n        console.log('VideosView componentDidMount Show and Videos', show, this.props);\n        this.setState({list: this.props.videos.list, show});\n    }\n\n    filterById(id, list) {\n        const showArray = list.filter(s => s.id == id);\n        const show = Array.isArray(showArray) ? showArray[0] : showArray;\n        return show;\n    }\n\n    render() {\n        const {video, show} = this.state;\n        if (!show) return <div>Loading...</div>\n\n        return (\n            <section id=\"dashboard\" className=\"dashboard\">\n                <Sidebar/>\n                <Center>\n\n                    <div className=\"row\">\n                        <div className=\"col-1-of-1\">\n                            <h1>Show View</h1>\n                            <h3>{show.form.title}</h3>\n                            <h3>{show.form.description}</h3>\n                            <h3>Episodes: {show.form.episodes.length}</h3>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col-1-of-2\">\n                            <form>\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-1\">\n                                        <Alert type={this.state.alert.type} title={this.state.alert.title}/>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-1\">\n                                        <input type=\"text\" id=\"title\" placeholder=\"Type title\"\n                                               value={video.form.title}\n                                               onChange={e => this.handleChange(e)}/>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-1\">\n                                        <input type=\"text\" id=\"description\" placeholder=\"Type description\"\n                                               value={video.form.description}\n                                               onChange={e => this.handleChange(e)}/>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-1\">\n                                        <Select model={video}/>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-1\">\n                                        <File model={video} type=\"image\"/>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-1\">\n                                        <File model={video} type=\"video\"/>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-3\">\n                                        <div className=\"dashboard--container\">\n\n                                            <button style={{width: '80px'}} type=\"submit\"\n                                                    onClick={e => this.handleFormSubmit(e)}><i\n                                                className=\"fas fa-save\"></i> Save\n                                            </button>\n\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </form>\n                        </div>\n                        <div className=\"col-1-of-2\">\n                            <VideoPlayer video={video}/>\n                        </div>\n                    </div>\n\n                    <Table fields={['id', 'title']} items={show.form.episodes}\n                           itemEditAction={this.props.videoEditAction} itemDeleteAction={this.props.videoDeleteAction}/>\n                </Center>\n            </section>\n        )\n    }\n}\n\n/**\n * Get data from store\n * @param state\n */\nconst mapStateToProps = state => ({\n    videos: state.videos,\n});\n\n/**\n * Import action from dir action above - but must be passed to connect method in order to trigger reducer in store\n * @type {{UserUpdate: UserUpdateAction}}\n */\nconst mapActionsToProps = {\n    videoAddAction,\n    videoReadAction,\n    videoUpdateAction,\n    videoDeleteAction,\n    videoEditAction\n};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(VideosView));\n","import React from 'react';\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport models from '../store/models';\nimport Sidebar from './Sidebar';\nimport Center from './Center';\nimport Table from './Table';\n\n\nclass Shows extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: models.shows // Show is an Object of class Show, while shows is array of objects from json/db\n        }\n    }\n\n    componentDidMount() {\n        const {readAction} = this.props;\n        const {show} = this.state;\n        show.list = this.props.shows.list;\n        show.form = this.props.shows.form;\n\n        if (show.list.length < 1) {\n            readAction();\n        } else {\n            this.setState({show});\n        }\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        const {show} = this.state;\n        show.list = nextProps.shows.list;\n        show.form = nextProps.shows.form;\n\n        if (!show || show.list.length > 0) {\n            this.setState({show});\n        }\n    }\n\n    handleChange = (e) => {\n        const {show} = this.state;\n        show.form[e.target.id] = e.target.value;\n        this.forceUpdate();\n    };\n\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        const {show} = this.state;\n        const {createAction, updateAction} = this.props;\n        show.submitForm(createAction, updateAction);\n        this.setState({show});\n    };\n\n\n    render() {\n        const {show} = this.state;\n\n        return (\n            <section id=\"dashboard\" className=\"dashboard\">\n                <Sidebar/>\n                <Center>\n                    <div className=\"row\">\n                        <div className=\"col-1-of-1\">\n                            <h1>Shows</h1>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-1-of-2\">\n                            <form>\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-1\">\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-1\">\n                                        <input type=\"text\" id=\"title\" placeholder=\"Type title\"\n                                               value={show.form.title}\n                                               onChange={e => this.handleChange(e)}/>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-1\">\n                                        <textarea cols={40} rows={5} id=\"description\" placeholder=\"Type description\"\n                                                  value={show.form.description}\n                                                  onChange={e => this.handleChange(e)}></textarea>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-3\">\n                                        <div className=\"dashboard--container\">\n\n                                            <button style={{width: '80px'}} type=\"submit\"\n                                                    onClick={e => this.handleFormSubmit(e)}><i\n                                                className=\"fas fa-save\"></i> Save\n                                            </button>\n\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </form>\n                        </div>\n                    </div>\n\n                    <Table fields={['id', 'title', 'description']} items={show.list}\n                           itemViewAction={(arr) => this.props.history.push('/shows/' + (arr['id'] ? arr['id'] : arr['_id']) )}\n                           itemEditAction={this.props.editAction} itemDeleteAction={this.props.deleteAction}/>\n                </Center>\n            </section>\n        )\n    }\n}\n\n\n/**\n * Get data from store\n * @param state\n */\nconst mapStateToProps = state => ({\n    shows: state.shows,\n});\n\n/**\n * Import action from dir action above - but must be passed to connect method in order to trigger reducer in store\n * @type {{UserUpdate: UserUpdateAction}}\n */\nconst mapActionsToProps = {\n    readAction: models.shows.actions.read,\n    deleteAction: models.shows.actions.delete,\n    editAction: models.shows.actions.edit,\n    createAction: models.shows.actions.create,\n    updateAction: models.shows.actions.update,\n};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Shows));\n","import React from 'react';\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport models from '../store/models';\nimport Sidebar from './Sidebar';\nimport Center from './Center';\nimport Table from './Table';\nimport File from './File';\nimport Select from './Select';\nimport VideoPlayer from './VideoPlayer';\nimport Show from \"../Models/Show\";\n\n\nclass ShowsView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            episode: models.episodes, // Show is an Object of class Show, while shows is array of objects from json/db\n            showPlayer: false\n        }\n    }\n\n    componentDidMount() {\n        const {match, shows} = this.props;\n        const {episode} = this.state;\n        episode._form.show_id = match.params.id;\n        this.setState({episode, show: this.filterByShow(shows)});\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        const {episode} = this.state;\n        const {shows, episodes} = nextProps;\n        episode.form = episodes.form;\n        this.setState({episode, show: this.filterByShow(shows)});\n    }\n\n    handleChange = (e) => {\n        const {episode} = this.state;\n        episode.form[e.target.id] = e.target.value;\n        this.forceUpdate();\n    };\n\n    // CREATE\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        const {episode} = this.state;\n        episode.form.show_id = this.props.match.params.id;\n        const {createAction, updateAction} = this.props; // actions for episodes\n        episode.submitForm(createAction, updateAction);\n        this.setState({episode});\n    };\n\n    handleFormClear = e => {\n        e.preventDefault();\n        const {episode} = this.state;\n        episode.resetForm();\n        this.setState({episode});\n    };\n\n    deleteAction = (episodeId) => {\n        const showId = this.props.match.params.id;\n        this.props.deleteAction(showId + '+' + episodeId);\n    };\n\n    viewAction = (video) => {\n        video.views = Math.floor(Math.random() * 1000);\n        this.setState({showPlayer: true, video});\n    };\n\n    filterByShow(shows) {\n        if (!shows || Object.keys(shows).length < 1) return (new Show()).form;\n        const show = shows.list.find(s => s._id === this.props.match.params.id);\n        return show;\n    }\n\n    render() {\n        const {episode, show} = this.state;\n        if (!show) return <div>Loading...</div>;\n        const btnLabel = episode.hasId ? 'Update' : 'Save';\n\n        return (\n            <section id=\"dashboard\" className=\"dashboard\">\n                <Sidebar/>\n                <Center>\n                    <div className=\"row\">\n                        <div className=\"col-1-of-1\">\n                            <h1>Show View</h1>\n                            <h3>{show.title}</h3>\n                            <h3>{show.description}</h3>\n                            <h3>Episodes: {show.episodes.length}</h3>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-1-of-2\">\n                            <form>\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-1\">\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-1\">\n                                        <input type=\"text\" id=\"title\" placeholder=\"Type title\"\n                                               value={episode.form.title}\n                                               onChange={e => this.handleChange(e)}/>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-1\">\n                                        <textarea cols={40} rows={5} id=\"description\" placeholder=\"Type description\"\n                                                  value={episode.form.description}\n                                                  onChange={e => this.handleChange(e)}></textarea>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-1\">\n                                        <Select model={episode}/>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-1\">\n                                        <File model={episode} type=\"image\"/>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-1\">\n                                        <File model={episode} type=\"video\"/>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-1-of-3\">\n                                        <div className=\"dashboard--container\">\n                                            <button style={{width: '80px'}} type=\"submit\"\n                                                    onClick={e => this.handleFormSubmit(e)}><i\n                                                className=\"fas fa-save\"></i> {btnLabel}\n                                            </button>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-1-of-3\">\n                                        <div className=\"dashboard--container\">\n                                            <button style={{width: '80px'}} type=\"submit\"\n                                                    onClick={e => this.handleFormClear(e)}><i\n                                                className=\"fas fa-save\"></i> Clear\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </form>\n                        </div>\n\n                        <div className=\"col-1-of-2\">\n                            {\n                                this.state.showPlayer ? <VideoPlayer video={this.state.video}/> : null\n                            }\n                        </div>\n                    </div>\n                    <Table fields={['title', 'description', 'genre']} items={show.episodes ? show.episodes : []}\n                           itemViewAction={episodeArray => this.viewAction(episodeArray)}\n                           itemEditAction={this.props.editAction} itemDeleteAction={this.deleteAction}/>\n                </Center>\n            </section>\n        )\n    }\n}\n\n\n/**\n * Get data from store\n * @param state\n */\nconst mapStateToProps = state => ({\n    episodes: state.episodes,\n    shows: state.shows,\n});\n\n/**\n * Import action from dir action above - but must be passed to connect method in order to trigger reducer in store\n * @type {{UserUpdate: UserUpdateAction}}\n */\nconst mapActionsToProps = {\n    readShowsAction: models.shows.actions.read,\n    readAction: models.episodes.actions.read,\n    deleteAction: models.episodes.actions.delete,\n    editAction: models.episodes.actions.edit,\n    createAction: models.episodes.actions.create,\n    updateAction: models.episodes.actions.update,\n};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(ShowsView));\n","import React, {Component} from 'react';\nimport {Route, Switch, BrowserRouter} from 'react-router-dom';\n\n\nimport Ni from './components/Ni';\nimport Users from './components/Users';\nimport Dashboard from './components/Dashboard';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport Profile from './components/Profile';\nimport Settings from './components/Settings';\nimport Reports from './components/Reports';\nimport Videos from \"./components/Videos\";\nimport VideosView from \"./components/VideosView\";\nimport Shows from \"./components/Shows\";\nimport ShowsView from \"./components/ShowsView\";\n\nclass App extends Component {\n\n    render() {\n        return (\n            <BrowserRouter basename=\"/\">\n                <Switch>\n                    <Route exact path={`/`} component={Login}/>\n                    <Route exact path={`/users`} component={Users}/>\n                    <Route exact path={`/videos`} component={Videos}/>\n                    <Route exact path={`/shows`} component={Shows}/>\n                    <Route exact path={`/shows/:id`} component={ShowsView}/>\n                    <Route exact path={`/login`} component={Login}/>\n                    <Route exact path={`/signup`} component={Signup}/>\n                    <Route exact path={`/dashboard`} component={Dashboard}/>\n                    <Route exact path={`/profile`} component={Profile}/>\n                    <Route exact path={`/settings`} component={Settings}/>\n                    <Route exact path={`/reports`} component={Reports}/>\n                    <Route component={Ni}/>\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {takeLatest, takeEvery} from 'redux-saga/effects';\n\nimport {VIDEO_ADD, VIDEO_READ, VIDEO_DELETE, VIDEO_UPDATE} from \"../types/Video\";\nimport {LOGIN} from \"../types/Login\";\nimport {USER_ADD, USER_DELETE, USER_UPDATE, USER_READ} from \"../types/User\";\n\nimport {videoAddSaga, videoReadSaga, videoDeleteSaga, videoUpdateSaga} from \"./videoSagas\";\nimport {loginSaga} from \"./loginSagas\";\nimport {userAddSaga, userDeleteSaga, userUpdateSaga, userReadSaga} from \"./userSagas\";\nimport {showReadSaga} from \"./showSagas\";\n\nimport Show from '../Models/Show';\nimport {apiServer} from '../common/constants';\nimport models from \"../store/models\";\n\nconst endPoint = '/api/v1/shows';\nconst api = apiServer + endPoint;\n//     constructor(name, server, form, forceUpdate) {\nconst show = new Show('show', api, [], null);\n\nconst user = new Show('u' , apiServer + '/api/v1/users', [],  null);\n\n\nexport default function* rootSaga() {\n    /*yield takeLatest(USER_ADD, userAddSaga);\n    yield takeLatest(USER_DELETE, userDeleteSaga);\n    yield takeLatest(USER_UPDATE, userUpdateSaga);\n    yield takeLatest(USER_READ, userReadSaga);\n\n    yield takeLatest(LOGIN, loginSaga);\n\n    yield takeLatest(VIDEO_ADD, videoAddSaga);\n    yield takeLatest(VIDEO_READ, videoReadSaga);\n    yield takeLatest(VIDEO_DELETE, videoDeleteSaga);\n    yield takeLatest(VIDEO_UPDATE, videoUpdateSaga);*/\n\n    // yield takeLatest(show.types.read, show.sagas.read);\n    //yield takeLatest(user.types.read, user.sagas.read);\n    for(let i=0; i < Object.keys(models).length; i++) {\n        const model = models[Object.keys(models)[i]];\n        // CRUD Listeners\n        yield takeLatest(model.types.create, model.sagas.create);\n        yield takeLatest(model.types.read, model.sagas.read);\n        yield takeLatest(model.types.update, model.sagas.update);\n        yield takeLatest(model.types.delete, model.sagas.deleted);\n    }\n}\n\n\n\n","/**\n * Standard packages\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, compose, combineReducers, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\n/**\n * Our custom components / packages\n */\nimport { ENVIRONMENT } from \"./common/behaviour\";\nimport App from './App';\n\n/**\n * Resources\n */\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\n// # 01\n/**\n * A reducer is a function that operates on the state object and then returns it\n * Please note that this function is also called during initialization of store - so any code\n * without if stmt will be executed multiple times - internal operation of store !\n * @param state - this is a misleading name - here it is not the full state but just corresponding key value\n * @param action\n * @returns {Array} - every return value is assigned to the corresponding key in allReducers\n */\nimport rootSaga from './sagas/rootSaga';\nimport UserReducer from \"./reducers/UserReducer\";\nimport LoginReducer from \"./reducers/LoginReducer\";\nimport VideoReducer from \"./reducers/VideoReducer\";\n\nimport {userReadAction} from \"./actions/UserAction\";\nimport {videoReadAction} from \"./actions/VideoAction\";\nimport Model from './Models/Model';\nimport {apiServer} from \"./common/constants\";\nimport models from './store/models';\nimport {takeLatest} from \"redux-saga/effects\";\n\nconst show = new Model('shows');\nconst user = new Model('users');\n\nlet reds = {};\nfor(let i=0; i < Object.keys(models).length; i++) {\n    const model = models[Object.keys(models)[i]];\n    reds[model.name] = model.reducers\n}\n\nconst allReducers = combineReducers( Object.assign({}, {\n    //users: UserReducer,\n    //login: LoginReducer,\n    //videos : VideoReducer,\n}, reds));\n\n// # 02\n/**\n * Sagas to connect to external world - async api calls\n */\nconst sagaMiddleware = createSagaMiddleware();\n\n// # 03\n/**\n * Store enhancers, devToolsExtensions\n */\n// Fixing error : TypeError: t is undefined\n// Only chrome can handle the redux dev tool\n// Redux compose cannot handle a null or undefined middleware\nconst allStoreEnhancers = window.navigator.userAgent.includes('Chrome') && window.devToolsExtension && ENVIRONMENT.DEV\n    ? compose(\n        applyMiddleware(sagaMiddleware),\n        window.devToolsExtension && window.devToolsExtension()\n    )\n    : applyMiddleware(sagaMiddleware);\n\n// # 04\n/**\n * Create store with allReducers which are all called one by one when there is dispatch\n * Second param is initial state of store\n * Last param is for redux debug in chrome extension\n * @type {Store<S&StateExt>&Ext}\n */\nconst store = createStore(\n    allReducers,\n    {},\n    allStoreEnhancers\n);\nsagaMiddleware.run(rootSaga);\n\n// # 05\n/**\n * You can see the status of store - but only data and not reducers\n */\nconsole.log(store.getState());\n\n// # 06\n/**\n * Action is an object with format of type and payload\n * @type {{type: string, payload: {newState: string}}}\n * Dispatch action to store\n */\n\n/*\n* no need here moved to App component for unified standard place for all these actions\nstore.dispatch(eventStatsUpdateAction());\nlet statsUpdate = localStorage.getItem('statsUpdate');\nclearInterval(statsUpdate);\nstatsUpdate = setInterval(() => store.dispatch(eventStatsUpdateAction()), 6000);\nlocalStorage.setItem('statsUpdate', statsUpdate);\n*/\n\n// Read news\nif(true || ENVIRONMENT.DEV) {\n    // store.dispatch(postsReadAction());\n    // store.dispatch(userReadAction());\n    // store.dispatch(videoReadAction());\n    // store.dispatch(show.actions.read({}));\n    // store.dispatch(user.actions.read({}));\n    /*store.dispatch(show.actions.read_success({\n        a: 5455,\n        b: 9909\n    }));*/\n\n\n    for(let i=0; i < Object.keys(models).length; i++) {\n        const model = models[Object.keys(models)[i]];\n        store.dispatch(model.actions.read({}));\n    }\n}\n\n/**\n * Avoid setting up multiple interval objects in background\n * @type {string | null}\n */\nif(ENVIRONMENT.DEV) {\n    store.subscribe(() => {\n        console.log('subscribed store in index', store.getState());\n    });\n}\n\n/**\n * Render the main App Component\n */\n// ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render((\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {\n    USER_EDIT,\n    USER_EDIT_SUCCESS,\n    USER_EDIT_FAIL,\n    USER_ADD_SUCCESS,\n    USER_READ_SUCCESS,\n    USER_UPDATE_SUCCESS\n} from '../types/User';\n\nconst initState = {\n    edit: {},\n    delete: {},\n    add: {}\n};\n\nconst UserReducer = (state = initState, action = {}) => {\n    switch (action.type) {\n        case USER_EDIT:\n            console.log('Inside UserReducer USER_EDIT', action.payload);\n            const newStateEdit = {...state, ...{edit: action.payload.user}};\n            return newStateEdit;\n\n        case USER_EDIT_SUCCESS:\n            console.log('Inside UserReducer USER_EDIT_SUCCESS', action);\n            return state;\n\n        case USER_UPDATE_SUCCESS:\n            console.log('Inside UserReducer', action.payload);\n            const edit = state.edit;\n            edit.result = action.payload.status;\n            const newStateUpdate = {...state, ...{edit}};\n            return newStateUpdate;\n\n        case USER_ADD_SUCCESS:\n            console.log('Inside UserReducer', action.payload);\n            const newStateAdd = {...state, ...{add: action.payload}};\n            return newStateAdd;\n\n        case USER_READ_SUCCESS:\n            console.log('Inside USER_READ_SUCCESS', action.payload);\n            const newState = {...state, ...{list: action.payload.users}};\n            return newState;\n\n        default:\n            return state;\n    }\n};\n\nexport default UserReducer;\n"],"sourceRoot":""}